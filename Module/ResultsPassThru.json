{
    "TagFilter":  null,
    "ExcludeTagFilter":  null,
    "TestNameFilter":  null,
    "TotalCount":  26,
    "PassedCount":  26,
    "FailedCount":  0,
    "SkippedCount":  0,
    "PendingCount":  0,
    "InconclusiveCount":  0,
    "Time":  {
                 "Ticks":  17228397,
                 "Days":  0,
                 "Hours":  0,
                 "Milliseconds":  722,
                 "Minutes":  0,
                 "Seconds":  1,
                 "TotalDays":  1.9940274305555553E-05,
                 "TotalHours":  0.00047856658333333334,
                 "TotalMilliseconds":  1722.8397,
                 "TotalMinutes":  0.028713995,
                 "TotalSeconds":  1.7228397
             },
    "TestResult":  [
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-AdUserDefaultPassword",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.3878508",
                           "Name":  "builds the default FilePath parameter correctly and passes it to Import-CliXml",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-AdUserDefaultPassword",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0321937",
                           "Name":  "returns a single secure string",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-AdUserDefaultPassword",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0525247",
                           "Name":  "converts the expected password to a secure string",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-ActiveEmployee",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0971806",
                           "Name":  "returns the expected number of objects",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-ActiveEmployee",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0443618",
                           "Name":  "returns objects that have an ADuserName property appended",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-ActiveEmployee",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0436234",
                           "Name":  "returns objects that have an OUPath property appended",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-ActiveEmployee",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0354953",
                           "Name":  "throws an exception when the CSV file cannot be found",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-ActiveEmployee",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0496663",
                           "Name":  "builds the default FilePath parameter correctly and passes it to Import-Csv",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-InactiveEmployee",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0962904",
                           "Name":  "should only query for AD users that are enabled",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-InactiveEmployee",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0567298",
                           "Name":  "should exclude the domain administrator account from the AD user query",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-InactiveEmployee",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0462718",
                           "Name":  "should only return AD users that are not in the CSV file",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-EmployeeUsername",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0543234",
                           "Name":  "should return a single string",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-EmployeeUsername",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0164733",
                           "Name":  "should return the first initial of the first name as the first character",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-EmployeeUsername",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0173788",
                           "Name":  "should return the expected username",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-DepartmentOUPath",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0517541",
                           "Name":  "returns a single string",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Get-DepartmentOUPath",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0141182",
                           "Name":  "returns the expected OU path",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Test-AdUserExists",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0690951",
                           "Name":  "returns $true if the user account can be found in AD",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Test-AdUserExists",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0323326",
                           "Name":  "returns $false if the user account cannot be found in AD",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Test-AdGroupExists",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0666864",
                           "Name":  "returns $true if the group can be found in AD",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Test-AdGroupExists",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0387117",
                           "Name":  "returns $false if the group cannot be found in AD",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Test-AdGroupMemberExists",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0736445",
                           "Name":  "returns $true if the username is a member of the group",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Test-AdGroupMemberExists",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0334243",
                           "Name":  "returns $false if the username is not a member of the group",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Test-ADOrganizationalUnitExists",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0708635",
                           "Name":  "creates the proper full OU DN and passes to Get-ADOrganizationalUnit",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Test-ADOrganizationalUnitExists",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0288797",
                           "Name":  "returns $true if the group can be found in AD",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "Test-ADOrganizationalUnitExists",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.1231750",
                           "Name":  "returns $false if the group cannot be found in AD",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       },
                       {
                           "ErrorRecord":  null,
                           "ParameterizedSuiteName":  "",
                           "Describe":  "New-CompanyAdUser",
                           "Parameters":  "System.Collections.Specialized.OrderedDictionary",
                           "Passed":  true,
                           "Show":  1023,
                           "FailureMessage":  "",
                           "Time":  "00:00:00.0897905",
                           "Name":  "should attempt to create an AD user with the proper parameters",
                           "Result":  "Passed",
                           "Context":  "",
                           "StackTrace":  ""
                       }
                   ],
    "CodeCoverage":  {
                         "NumberOfCommandsAnalyzed":  77,
                         "NumberOfFilesAnalyzed":  1,
                         "NumberOfCommandsExecuted":  77,
                         "NumberOfCommandsMissed":  0,
                         "MissedCommands":  [

                                            ],
                         "HitCommands":  [
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=6; Function=Get-AdUserDefaultPassword; Command=$PSScriptRoot}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=6; Function=Get-AdUserDefaultPassword; Command=Split-Path -Parent}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=10; Function=Get-AdUserDefaultPassword; Command=Write-Verbose -Message \"Reading default password from [$FilePath]...\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=11; Function=Get-AdUserDefaultPassword; Command=$defaultCredential = Import-CliXml -Path $FilePath}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=12; Function=Get-AdUserDefaultPassword; Command=$defaultPassword = $defaultCredential.GetNetworkCredential().Password}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=13; Function=Get-AdUserDefaultPassword; Command=ConvertTo-SecureString -String $defaultPassword -AsPlainText -Force}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=21; Function=Get-ActiveEmployee; Command=$PSScriptRoot}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=21; Function=Get-ActiveEmployee; Command=Split-Path -Parent}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=24; Function=Get-ActiveEmployee; Command=if (-not (Test-Path -Path $FilePath)) {\r\n        throw \"The employee CSV file at [$($FilePath)] could not be found.\"\r\n    } else {\r\n        Write-Verbose -Message \"The employee CSV file at [$($FilePath)] exists.\"\r\n    }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=24; Function=Get-ActiveEmployee; Command=Test-Path -Path $FilePath}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=25; Function=Get-ActiveEmployee; Command=throw \"The employee CSV file at [$($FilePath)] could not be found.\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=25; Function=Get-ActiveEmployee; Command=$FilePath}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=27; Function=Get-ActiveEmployee; Command=Write-Verbose -Message \"The employee CSV file at [$($FilePath)] exists.\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=27; Function=Get-ActiveEmployee; Command=$FilePath}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=30; Function=Get-ActiveEmployee; Command=$selectProperties = @(\r\n        \u0027*\u0027\r\n        @{ n= \u0027ADUsername\u0027;e={Get-EmployeeUsername -FirstName $_.Firstname -LastName $_.LastName } }\r\n        @{ n= \u0027OUPath\u0027;e={Get-DepartmentOUPath -OUPath $_.Department } }\r\n    )}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=31; Function=Get-ActiveEmployee; Command=\u0027*\u0027}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=32; Function=Get-ActiveEmployee; Command=@{ n= \u0027ADUsername\u0027;e={Get-EmployeeUsername -FirstName $_.Firstname -LastName $_.LastName } }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=32; Function=Get-ActiveEmployee; Command=n = \u0027ADUsername\u0027}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=32; Function=Get-ActiveEmployee; Command=e = {Get-EmployeeUsername -FirstName $_.Firstname -LastName $_.LastName }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=32; Function=Get-ActiveEmployee; Command=Get-EmployeeUsername -FirstName $_.Firstname -LastName $_.LastName}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=33; Function=Get-ActiveEmployee; Command=@{ n= \u0027OUPath\u0027;e={Get-DepartmentOUPath -OUPath $_.Department } }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=33; Function=Get-ActiveEmployee; Command=n = \u0027OUPath\u0027}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=33; Function=Get-ActiveEmployee; Command=e = {Get-DepartmentOUPath -OUPath $_.Department }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=33; Function=Get-ActiveEmployee; Command=Get-DepartmentOUPath -OUPath $_.Department}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=36; Function=Get-ActiveEmployee; Command=Import-Csv -Path $FilePath}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=36; Function=Get-ActiveEmployee; Command=Select-Object $selectProperties}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=45; Function=Get-InactiveEmployee; Command=Get-ActiveEmployee}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=48; Function=Get-InactiveEmployee; Command=$adUsers = Get-ADuser -Filter \"Enabled -eq \u0027True\u0027 -and SamAccountName -ne \u0027Administrator\u0027\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=49; Function=Get-InactiveEmployee; Command=$adUsers.where({ $_.samAccountName -notin $ActiveEmployee.ADUsername })}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=49; Function=Get-InactiveEmployee; Command=$_.samAccountName -notin $ActiveEmployee.ADUsername}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=66; Function=Get-EmployeeUsername; Command=$firstInitial = $FirstName.SubString(0,1)}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=67; Function=Get-EmployeeUsername; Command=\u0027{0}{1}\u0027 -f $firstInitial,$LastName}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=84; Function=Get-DepartmentOUPath; Command=\"OU=$OUPath,$DomainDistinguishedName\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=95; Function=Test-AdUserExists; Command=if (Get-ADUser -Filter \"Name -eq \u0027$UserName\u0027\") {\r\n        Write-Verbose -Message \"The user account [$($Username)] exists.\"\r\n        $true\r\n    } else {\r\n        Write-Verbose -Message \"The user account [$($Username)] does not exist.\"\r\n        $false\r\n    }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=96; Function=Test-AdUserExists; Command=Write-Verbose -Message \"The user account [$($Username)] exists.\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=96; Function=Test-AdUserExists; Command=$Username}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=97; Function=Test-AdUserExists; Command=$true}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=99; Function=Test-AdUserExists; Command=Write-Verbose -Message \"The user account [$($Username)] does not exist.\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=99; Function=Test-AdUserExists; Command=$Username}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=100; Function=Test-AdUserExists; Command=$false}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=113; Function=Test-AdGroupExists; Command=if (Get-ADGroup -Filter \"Name -eq \u0027$Name\u0027\") {\r\n        Write-Verbose -Message \"The group [$($Name)] exists.\"\r\n        $true\r\n    } else {\r\n        Write-Verbose -Message \"The group [$($Name)] does not exist.\"\r\n        $false\r\n    }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=114; Function=Test-AdGroupExists; Command=Write-Verbose -Message \"The group [$($Name)] exists.\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=114; Function=Test-AdGroupExists; Command=$Name}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=115; Function=Test-AdGroupExists; Command=$true}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=117; Function=Test-AdGroupExists; Command=Write-Verbose -Message \"The group [$($Name)] does not exist.\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=117; Function=Test-AdGroupExists; Command=$Name}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=118; Function=Test-AdGroupExists; Command=$false}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=135; Function=Test-AdGroupMemberExists; Command=$groupMembers = (Get-ADGroupMember -Identity $GroupName).Name}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=135; Function=Test-AdGroupMemberExists; Command=Get-ADGroupMember -Identity $GroupName}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=136; Function=Test-AdGroupMemberExists; Command=if ($UserName -in $groupMembers) {\r\n        Write-Verbose -Message \"[$($UserName)] is a member of [$GroupName]\"\r\n        $true\r\n    } else {\r\n        Write-Verbose -Message \"[$($UserName)] is not a a member of [$GroupName]\"\r\n        $false\r\n    }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=137; Function=Test-AdGroupMemberExists; Command=Write-Verbose -Message \"[$($UserName)] is a member of [$GroupName]\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=137; Function=Test-AdGroupMemberExists; Command=$UserName}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=138; Function=Test-AdGroupMemberExists; Command=$true}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=140; Function=Test-AdGroupMemberExists; Command=Write-Verbose -Message \"[$($UserName)] is not a a member of [$GroupName]\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=140; Function=Test-AdGroupMemberExists; Command=$UserName}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=141; Function=Test-AdGroupMemberExists; Command=$false}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=154; Function=Test-ADOrganizationalUnitExists; Command=if (Get-ADOrganizationalUnit -Filter \"DistinguishedName -eq \u0027$DistinguishedName\u0027\") {\r\n        Write-Verbose -Message \"The organizational unit [$DistinguishedName] exists.\"\r\n        $true\r\n    } else {\r\n        Write-Verbose -Message \"The organizational unit [$DistinguishedName] does not exist.\"\r\n        $false\r\n    }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=155; Function=Test-ADOrganizationalUnitExists; Command=Write-Verbose -Message \"The organizational unit [$DistinguishedName] exists.\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=156; Function=Test-ADOrganizationalUnitExists; Command=$true}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=158; Function=Test-ADOrganizationalUnitExists; Command=Write-Verbose -Message \"The organizational unit [$DistinguishedName] does not exist.\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=159; Function=Test-ADOrganizationalUnitExists; Command=$false}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=180; Function=New-CompanyAdUser; Command=Get-AdUserDefaultPassword}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=183; Function=New-CompanyAdUser; Command=$newUserParams = @{\r\n        UserPrincipalName = $Username\r\n        Name = $Username\r\n        GivenName = $Employee.FirstName\r\n        Surname = $Employee.LastName\r\n        Title = $Employee.Title\r\n        Department = $Employee.Department\r\n        SamAccountName = $Username\r\n        AccountPassword = $Password\r\n        Path = $OrganizationalUnit\r\n        Enabled = $true\r\n        ChangePasswordAtLogon = $true\r\n    }}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=184; Function=New-CompanyAdUser; Command=UserPrincipalName = $Username}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=185; Function=New-CompanyAdUser; Command=Name = $Username}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=186; Function=New-CompanyAdUser; Command=GivenName = $Employee.FirstName}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=187; Function=New-CompanyAdUser; Command=Surname = $Employee.LastName}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=188; Function=New-CompanyAdUser; Command=Title = $Employee.Title}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=189; Function=New-CompanyAdUser; Command=Department = $Employee.Department}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=190; Function=New-CompanyAdUser; Command=SamAccountName = $Username}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=191; Function=New-CompanyAdUser; Command=AccountPassword = $Password}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=192; Function=New-CompanyAdUser; Command=Path = $OrganizationalUnit}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=193; Function=New-CompanyAdUser; Command=Enabled = $true}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=194; Function=New-CompanyAdUser; Command=ChangePasswordAtLogon = $true}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=197; Function=New-CompanyAdUser; Command=Write-Verbose -Message \"Creating the new user account [$($Username)]...\"}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=197; Function=New-CompanyAdUser; Command=$Username}",
                                             "@{File=C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1; Line=198; Function=New-CompanyAdUser; Command=New-AdUser @newUserParams}"
                                         ],
                         "AnalyzedFiles":  [
                                               "C:\\Users\\martin.dome\\CodigoSonarqube\\Module\\AdUserSync.psm1"
                                           ]
                     }
}
